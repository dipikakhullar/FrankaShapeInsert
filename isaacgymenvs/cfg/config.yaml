# Task name - used to pick the class to load
task_name: ${task.name}
# experiment name. defaults to name of training config
experiment: ''

# if set to positive integer, overrides the default number of environments
num_envs: 16384

# seed - set to -1 to choose random seed
seed: 42
# set to True for deterministic performance
torch_deterministic: False

# set the maximum number of learning iterations to train for. overrides default per-environment setting
max_iterations: 50000

## Device config
#  'physx' or 'flex'
physics_engine: 'physx'
# whether to use cpu or gpu pipeline
pipeline: 'gpu'
# device for running physics simulation
sim_device: 'cuda:0'
# device to run RL
rl_device: 'cuda:0'
graphics_device_id: 0

## PhysX arguments
num_threads: 4 # Number of worker threads per scene used by PhysX - for CPU PhysX only.
solver_type: 1 # 0: pgs, 1: tgs
num_subscenes: 4 # Splits the simulation into N physics scenes and runs each one in a separate thread

# RLGames Arguments
# test - if set, run policy in inference mode (requires setting checkpoint to load)
test: False
# used to set checkpoint path
checkpoint: ''
# set sigma when restoring network
sigma: ''
# set to True to use multi-gpu training
multi_gpu: False

wandb_activate: True
wandb_group: ''
wandb_name: ${train.params.config.name}
wandb_entity: ''
wandb_project: 'isaacgym-env'
wandb_tags: []
wandb_logcode_dir: '' 

capture_video: False
capture_video_freq: 1464
capture_video_len: 100
force_render: True

# disables rendering
headless: False
# Train parameters
train:
    params:
        # batch_size: 16384  # Ensure this is a multiple of minibatch_size
        # minibatch_size: 1024  # Set this based on your needs
        minibatch_size: 16384
        horizon_length: 64

        # minibatch_size: 4
        # horizon_length: 1
        # minibatch_size: 16384  # Match this to your batch size or use a smaller fraction
        seed: 42
        # horizon_length: 64  # The number of steps to run the policy before updating
        num_agents: 1  # Add this if it's not in your config

        algo:
            name: a2c_continuous
        model:
            name: continuous_a2c_logstd
        network:
            name: actor_critic
# set default task and default training config based on task
defaults:
  - task: FrankaCabinet
  - train: ${task}PPO
  - pbt: no_pbt
  - override hydra/job_logging: disabled
  - _self_

# set the directory where the output files get saved
hydra:
  output_subdir: null
  run:
    dir: .

